//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotcakes.Commerce.Data.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Linq;
    
    public partial class HccDbContext : DbContext
    {
        public HccDbContext()
            : base("name=HccDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<hcc_SearchLexicon> hcc_SearchLexicon { get; set; }
        public DbSet<hcc_SearchObject> hcc_SearchObjects { get; set; }
        public DbSet<hcc_SearchObjectWord> hcc_SearchObjectWords { get; set; }
        public DbSet<hcc_Address> hcc_Address { get; set; }
        public DbSet<hcc_Audit> hcc_Audit { get; set; }
        public DbSet<hcc_Category> hcc_Category { get; set; }
        public DbSet<hcc_CategoryXProperty> hcc_CategoryXProperty { get; set; }
        public DbSet<hcc_ContentBlock> hcc_ContentBlock { get; set; }
        public DbSet<hcc_ContentColumn> hcc_ContentColumn { get; set; }
        public DbSet<hcc_CustomUrl> hcc_CustomUrl { get; set; }
        public DbSet<hcc_Fraud> hcc_Fraud { get; set; }
        public DbSet<hcc_Manufacturer> hcc_Manufacturer { get; set; }
        public DbSet<hcc_PriceGroup> hcc_PriceGroup { get; set; }
        public DbSet<hcc_Product> hcc_Product { get; set; }
        public DbSet<hcc_ProductFile> hcc_ProductFile { get; set; }
        public DbSet<hcc_ProductImage> hcc_ProductImage { get; set; }
        public DbSet<hcc_ProductInventory> hcc_ProductInventory { get; set; }
        public DbSet<hcc_ProductOptions> hcc_ProductOptions { get; set; }
        public DbSet<hcc_ProductOptionsItems> hcc_ProductOptionsItems { get; set; }
        public DbSet<hcc_ProductProperty> hcc_ProductProperty { get; set; }
        public DbSet<hcc_ProductPropertyChoice> hcc_ProductPropertyChoice { get; set; }
        public DbSet<hcc_ProductReview> hcc_ProductReview { get; set; }
        public DbSet<hcc_ProductType> hcc_ProductType { get; set; }
        public DbSet<hcc_ProductVolumeDiscounts> hcc_ProductVolumeDiscounts { get; set; }
        public DbSet<hcc_ProductXCategory> hcc_ProductXCategory { get; set; }
        public DbSet<hcc_ProductXOption> hcc_ProductXOption { get; set; }
        public DbSet<hcc_RewardsPoints> hcc_RewardsPoints { get; set; }
        public DbSet<hcc_RMA> hcc_RMA { get; set; }
        public DbSet<hcc_RMAItem> hcc_RMAItem { get; set; }
        public DbSet<hcc_SearchQuery> hcc_SearchQuery { get; set; }
        public DbSet<hcc_ShippingMethod> hcc_ShippingMethod { get; set; }
        public DbSet<hcc_User> hcc_User { get; set; }
        public DbSet<hcc_UserQuestions> hcc_UserQuestions { get; set; }
        public DbSet<hcc_USGeoData> hcc_USGeoData { get; set; }
        public DbSet<hcc_Variants> hcc_Variants { get; set; }
        public DbSet<hcc_Vendor> hcc_Vendor { get; set; }
        public DbSet<hcc_News> hcc_News { get; set; }
        public DbSet<hcc_OrderTransactions> hcc_OrderTransactions { get; set; }
        public DbSet<hcc_ShippingZones> hcc_ShippingZones { get; set; }
        public DbSet<hcc_Stores> hcc_Stores { get; set; }
        public DbSet<hcc_Taxes> hcc_Taxes { get; set; }
        public DbSet<hcc_TaxSchedules> hcc_TaxSchedules { get; set; }
        public DbSet<hcc_UserAccounts> hcc_UserAccounts { get; set; }
        public DbSet<hcc_ProductRelationship> hcc_ProductRelationship { get; set; }
        public DbSet<hcc_StoreDomains> hcc_StoreDomains { get; set; }
        public DbSet<hcc_MailingList> hcc_MailingList { get; set; }
        public DbSet<hcc_MailingListMember> hcc_MailingListMember { get; set; }
        public DbSet<hcc_ApiKey> hcc_ApiKeys { get; set; }
        public DbSet<hcc_AuthTokens> hcc_AuthTokens { get; set; }
        public DbSet<hcc_StoresXUsers> hcc_StoresXUsers { get; set; }
        public DbSet<hcc_StoreSettings> hcc_StoreSettings { get; set; }
        public DbSet<hcc_UserXContact> hcc_UserXContact { get; set; }
        public DbSet<hcc_OrderCoupon> hcc_OrderCoupon { get; set; }
        public DbSet<hcc_OrderNote> hcc_OrderNote { get; set; }
        public DbSet<hcc_OrderPackage> hcc_OrderPackage { get; set; }
        public DbSet<hcc_HtmlTemplates> hcc_HtmlTemplates { get; set; }
        public DbSet<hcc_Affiliate> hcc_Affiliate { get; set; }
        public DbSet<hcc_AffiliateReferral> hcc_AffiliateReferral { get; set; }
        public DbSet<hcc_LineItem> hcc_LineItem { get; set; }
        public DbSet<hcc_Promotions> hcc_Promotions { get; set; }
        public DbSet<hcc_Order> hcc_Order { get; set; }
        public DbSet<hcc_QueuedTask> hcc_QueuedTasks { get; set; }
        public DbSet<hcc_ProductFileXProduct> hcc_ProductFileXProduct { get; set; }
        public DbSet<hcc_ProductTypeXProductProperty> hcc_ProductTypeXProductProperty { get; set; }
        public DbSet<hcc_ProductPropertyValue> hcc_ProductPropertyValue { get; set; }
        public DbSet<hcc_WishListItem> hcc_WishListItems { get; set; }
        public DbSet<hcc_MembershipProductType> hcc_MembershipProductType { get; set; }
        public DbSet<hcc_AnalyticsEvent> hcc_AnalyticsEvents { get; set; }
        public DbSet<hcc_AffiliatePayments> hcc_AffiliatePayments { get; set; }
        public DbSet<hcc_BundledProducts> hcc_BundledProducts { get; set; }
        public DbSet<hcc_CategoryTranslation> hcc_CategoryTranslations { get; set; }
        public DbSet<hcc_ProductTranslation> hcc_ProductTranslations { get; set; }
        public DbSet<hcc_ProductPropertyTranslation> hcc_ProductPropertyTranslations { get; set; }
        public DbSet<hcc_ProductTypeTranslation> hcc_ProductTypeTranslations { get; set; }
        public DbSet<hcc_PromotionTranslation> hcc_PromotionTranslations { get; set; }
        public DbSet<hcc_ShippingMethodTranslation> hcc_ShippingMethodTranslations { get; set; }
        public DbSet<hcc_ProductOptionItemTranslation> hcc_ProductOptionItemTranslations { get; set; }
        public DbSet<hcc_ProductOptionTranslation> hcc_ProductOptionTranslations { get; set; }
        public DbSet<hcc_HtmlTemplateTranslation> hcc_HtmlTemplateTranslations { get; set; }
        public DbSet<hcc_ContentBlockTranslation> hcc_ContentBlockTranslations { get; set; }
        public DbSet<hcc_ProductPropertyChoiceTranslation> hcc_ProductPropertyChoiceTranslations { get; set; }
        public DbSet<hcc_Country> hcc_Countries { get; set; }
        public DbSet<hcc_CountryTranslation> hcc_CountryTranslations { get; set; }
        public DbSet<hcc_Region> hcc_Regions { get; set; }
        public DbSet<hcc_RegionTranslation> hcc_RegionTranslations { get; set; }
        public DbSet<hcc_ProductPropertyValueTranslation> hcc_ProductPropertyValueTranslations { get; set; }
        public DbSet<hcc_CatalogRoles> hcc_CatalogRoles { get; set; }
        public DbSet<hcc_GiftCard> hcc_GiftCard { get; set; }
        public DbSet<hcc_StoreSettingsTranslations> hcc_StoreSettingsTranslations { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GenerateNewOrderNumber(Nullable<long> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GenerateNewOrderNumber", storeidParameter);
        }
    
        public virtual ObjectResult<hcc_GetPromotionsActivityList_Result> GetPromotionsActivityList(Nullable<long> storeId, Nullable<System.DateTime> startDateUtc, Nullable<System.DateTime> endDateUtc)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(long));
    
            var startDateUtcParameter = startDateUtc.HasValue ?
                new ObjectParameter("StartDateUtc", startDateUtc) :
                new ObjectParameter("StartDateUtc", typeof(System.DateTime));
    
            var endDateUtcParameter = endDateUtc.HasValue ?
                new ObjectParameter("EndDateUtc", endDateUtc) :
                new ObjectParameter("EndDateUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hcc_GetPromotionsActivityList_Result>("GetPromotionsActivityList", storeIdParameter, startDateUtcParameter, endDateUtcParameter);
        }
    
        public virtual ObjectResult<hcc_FindGiftCards_Result> FindGiftCards(Nullable<long> storeId, Nullable<System.DateTime> startDateUtc, Nullable<System.DateTime> endDateUtc, string searchText, Nullable<decimal> amount, Nullable<int> amountComparing, Nullable<decimal> balance, Nullable<int> balanceComparing, Nullable<bool> includeInactive, Nullable<bool> includeExpired, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter rowCount)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(long));
    
            var startDateUtcParameter = startDateUtc.HasValue ?
                new ObjectParameter("StartDateUtc", startDateUtc) :
                new ObjectParameter("StartDateUtc", typeof(System.DateTime));
    
            var endDateUtcParameter = endDateUtc.HasValue ?
                new ObjectParameter("EndDateUtc", endDateUtc) :
                new ObjectParameter("EndDateUtc", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountComparingParameter = amountComparing.HasValue ?
                new ObjectParameter("AmountComparing", amountComparing) :
                new ObjectParameter("AmountComparing", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(decimal));
    
            var balanceComparingParameter = balanceComparing.HasValue ?
                new ObjectParameter("BalanceComparing", balanceComparing) :
                new ObjectParameter("BalanceComparing", typeof(int));
    
            var includeInactiveParameter = includeInactive.HasValue ?
                new ObjectParameter("IncludeInactive", includeInactive) :
                new ObjectParameter("IncludeInactive", typeof(bool));
    
            var includeExpiredParameter = includeExpired.HasValue ?
                new ObjectParameter("IncludeExpired", includeExpired) :
                new ObjectParameter("IncludeExpired", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hcc_FindGiftCards_Result>("FindGiftCards", storeIdParameter, startDateUtcParameter, endDateUtcParameter, searchTextParameter, amountParameter, amountComparingParameter, balanceParameter, balanceComparingParameter, includeInactiveParameter, includeExpiredParameter, pageIndexParameter, pageSizeParameter, rowCount);
        }
    
        public virtual int AddObjectIndex(Nullable<long> siteId, Nullable<System.Guid> objectId, Nullable<int> objectType, string title, string culture, string wordScores)
        {
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("siteId", siteId) :
                new ObjectParameter("siteId", typeof(long));
    
            var objectIdParameter = objectId.HasValue ?
                new ObjectParameter("objectId", objectId) :
                new ObjectParameter("objectId", typeof(System.Guid));
    
            var objectTypeParameter = objectType.HasValue ?
                new ObjectParameter("objectType", objectType) :
                new ObjectParameter("objectType", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var cultureParameter = culture != null ?
                new ObjectParameter("culture", culture) :
                new ObjectParameter("culture", typeof(string));
    
            var wordScoresParameter = wordScores != null ?
                new ObjectParameter("wordScores", wordScores) :
                new ObjectParameter("wordScores", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddObjectIndex", siteIdParameter, objectIdParameter, objectTypeParameter, titleParameter, cultureParameter, wordScoresParameter);
        }
    
        public virtual ObjectResult<hcc_GetTopAffectedProducts_Result> GetTopAffectedProducts(Nullable<long> storeId, string mainCulture, string fallbackCulture, Nullable<System.DateTime> rangeStart, Nullable<System.DateTime> rangeEnd, Nullable<System.DateTime> previousRangeStart, Nullable<System.DateTime> previousRangeEnd, Nullable<int> sortBy, Nullable<int> sortDirection, Nullable<int> pageNumber, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(long));
    
            var mainCultureParameter = mainCulture != null ?
                new ObjectParameter("mainCulture", mainCulture) :
                new ObjectParameter("mainCulture", typeof(string));
    
            var fallbackCultureParameter = fallbackCulture != null ?
                new ObjectParameter("fallbackCulture", fallbackCulture) :
                new ObjectParameter("fallbackCulture", typeof(string));
    
            var rangeStartParameter = rangeStart.HasValue ?
                new ObjectParameter("rangeStart", rangeStart) :
                new ObjectParameter("rangeStart", typeof(System.DateTime));
    
            var rangeEndParameter = rangeEnd.HasValue ?
                new ObjectParameter("rangeEnd", rangeEnd) :
                new ObjectParameter("rangeEnd", typeof(System.DateTime));
    
            var previousRangeStartParameter = previousRangeStart.HasValue ?
                new ObjectParameter("previousRangeStart", previousRangeStart) :
                new ObjectParameter("previousRangeStart", typeof(System.DateTime));
    
            var previousRangeEndParameter = previousRangeEnd.HasValue ?
                new ObjectParameter("previousRangeEnd", previousRangeEnd) :
                new ObjectParameter("previousRangeEnd", typeof(System.DateTime));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("sortBy", sortBy) :
                new ObjectParameter("sortBy", typeof(int));
    
            var sortDirectionParameter = sortDirection.HasValue ?
                new ObjectParameter("sortDirection", sortDirection) :
                new ObjectParameter("sortDirection", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hcc_GetTopAffectedProducts_Result>("GetTopAffectedProducts", storeIdParameter, mainCultureParameter, fallbackCultureParameter, rangeStartParameter, rangeEndParameter, previousRangeStartParameter, previousRangeEndParameter, sortByParameter, sortDirectionParameter, pageNumberParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<hcc_GetBouncedListByDay_Result> GetBouncedListByDay(Nullable<long> storeId, Nullable<System.DateTime> rangeStart, Nullable<System.DateTime> rangeEnd, Nullable<System.Guid> productGuid, Nullable<System.Guid> categoryGuid)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(long));
    
            var rangeStartParameter = rangeStart.HasValue ?
                new ObjectParameter("rangeStart", rangeStart) :
                new ObjectParameter("rangeStart", typeof(System.DateTime));
    
            var rangeEndParameter = rangeEnd.HasValue ?
                new ObjectParameter("rangeEnd", rangeEnd) :
                new ObjectParameter("rangeEnd", typeof(System.DateTime));
    
            var productGuidParameter = productGuid.HasValue ?
                new ObjectParameter("productGuid", productGuid) :
                new ObjectParameter("productGuid", typeof(System.Guid));
    
            var categoryGuidParameter = categoryGuid.HasValue ?
                new ObjectParameter("categoryGuid", categoryGuid) :
                new ObjectParameter("categoryGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hcc_GetBouncedListByDay_Result>("GetBouncedListByDay", storeIdParameter, rangeStartParameter, rangeEndParameter, productGuidParameter, categoryGuidParameter);
        }
    
        public virtual ObjectResult<hcc_GetBouncedListByHour_Result> GetBouncedListByHour(Nullable<long> storeId, Nullable<System.DateTime> rangeStart, Nullable<System.DateTime> rangeEnd, Nullable<System.Guid> productGuid, Nullable<System.Guid> categoryGuid)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(long));
    
            var rangeStartParameter = rangeStart.HasValue ?
                new ObjectParameter("rangeStart", rangeStart) :
                new ObjectParameter("rangeStart", typeof(System.DateTime));
    
            var rangeEndParameter = rangeEnd.HasValue ?
                new ObjectParameter("rangeEnd", rangeEnd) :
                new ObjectParameter("rangeEnd", typeof(System.DateTime));
    
            var productGuidParameter = productGuid.HasValue ?
                new ObjectParameter("productGuid", productGuid) :
                new ObjectParameter("productGuid", typeof(System.Guid));
    
            var categoryGuidParameter = categoryGuid.HasValue ?
                new ObjectParameter("categoryGuid", categoryGuid) :
                new ObjectParameter("categoryGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hcc_GetBouncedListByHour_Result>("GetBouncedListByHour", storeIdParameter, rangeStartParameter, rangeEndParameter, productGuidParameter, categoryGuidParameter);
        }
    
        public virtual int DeleteSampleAnalytics(Nullable<long> storeId, Nullable<bool> forSampleDataOnly)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(long));
    
            var forSampleDataOnlyParameter = forSampleDataOnly.HasValue ?
                new ObjectParameter("forSampleDataOnly", forSampleDataOnly) :
                new ObjectParameter("forSampleDataOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSampleAnalytics", storeIdParameter, forSampleDataOnlyParameter);
        }
    
        public virtual int DeleteStoreAnalyticsEvents(Nullable<long> storeId)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStoreAnalyticsEvents", storeIdParameter);
        }
    
        public virtual int DeleteStoreOrders(Nullable<long> storeId)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStoreOrders", storeIdParameter);
        }
    }
}
