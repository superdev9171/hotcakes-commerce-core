<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions.Text" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="AdjustOrderTotal.Text" xml:space="preserve">
    <value>Discount Order Total</value>
  </data>
  <data name="AdjustProductPrice.Text" xml:space="preserve">
    <value>Discount Product Price</value>
  </data>
  <data name="AdjustQualifyingItems.Text" xml:space="preserve">
    <value>Adjust Qualifying Items</value>
  </data>
  <data name="AdjustShippingBy.Text" xml:space="preserve">
    <value>Discount Shipping By...</value>
  </data>
  <data name="AnyOrder.Text" xml:space="preserve">
    <value>Any Order...</value>
  </data>
  <data name="AnyProduct.Text" xml:space="preserve">
    <value>Any Product...</value>
  </data>
  <data name="AnyShippingMethod.Text" xml:space="preserve">
    <value>Any Shipping Method...</value>
  </data>
  <data name="btnClose.Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnNewAction.Text" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="btnNewQualification.Text" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="chkDoNotCombine.Text" xml:space="preserve">
    <value>Do not combine with other offers (sales will still apply)</value>
  </data>
  <data name="chkEnabled.Text" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ConfirmDelete.Text" xml:space="preserve">
    <value>Are you sure you want to delete this item?</value>
  </data>
  <data name="CustomerDescription.Text" xml:space="preserve">
    <value>Customer Description</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditAction.Text" xml:space="preserve">
    <value>Edit Action</value>
  </data>
  <data name="EditPromotion.Text" xml:space="preserve">
    <value>Edit Promotion</value>
  </data>
  <data name="EditQualification.Text" xml:space="preserve">
    <value>Edit Qualification</value>
  </data>
  <data name="EndDate.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="IssueRewardPoints.Text" xml:space="preserve">
    <value>Issue Reward Points</value>
  </data>
  <data name="lnkBack.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MakeQualifyingItemsFreeShipping.Text" xml:space="preserve">
    <value>Make Qualifying Items Free Shipping...</value>
  </data>
  <data name="OrderHasCouponCode.Text" xml:space="preserve">
    <value>Order Has Coupon Code...</value>
  </data>
  <data name="PromotionName.Text" xml:space="preserve">
    <value>Promotion Name</value>
  </data>
  <data name="ReceiveFreeProduct.Text" xml:space="preserve">
    <value>Receive Free Product</value>
  </data>
  <data name="DiscountCategory.Text" xml:space="preserve">
    <value>Discount Category</value>
  </data>
  <data name="Qualifications.Text" xml:space="preserve">
    <value>Qualifications</value>
  </data>
  <data name="SavePromotionError.Text" xml:space="preserve">
    <value>Unable to save promotion. Unknown error.</value>
  </data>
  <data name="ShippingMethodIs.Text" xml:space="preserve">
    <value>Shipping Method Is...</value>
  </data>
  <data name="SlowMessage.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;span class=\"hcFormMessage hcFormWarning\"&gt;May run slowly!&lt;/span&gt;</value>
  </data>
  <data name="StartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="valDateCompare.Text" xml:space="preserve">
    <value>The End Date must be greater than the Start Date</value>
  </data>
  <data name="valDateEndRequired.Text" xml:space="preserve">
    <value>End Date is required</value>
  </data>
  <data name="valDateStartRequired.Text" xml:space="preserve">
    <value>Start Date is required</value>
  </data>
  <data name="valDescriptionRequired.Text" xml:space="preserve">
    <value>Customer Description is required</value>
  </data>
  <data name="valNameRequired.Text" xml:space="preserve">
    <value>Promotion Name is required</value>
  </data>
  <data name="WhenAffiliateIsApproved.Text" xml:space="preserve">
    <value>Affiliate Is Approved...</value>
  </data>
  <data name="WhenItemCategoryIsIsNot.Text" xml:space="preserve">
    <value>Product Category Is/Is Not...</value>
  </data>
  <data name="WhenLineItemIs.Text" xml:space="preserve">
    <value>Order Line Item Is...</value>
  </data>
  <data name="WhenOrderHasProducts.Text" xml:space="preserve">
    <value>Order Has Products...</value>
  </data>
  <data name="WhenOrderDoesNotHaveProducts.Text" xml:space="preserve">
    <value>When Order Does Not Have Product(s)...</value>
  </data>
  <data name="WhenOrderTotal.Text" xml:space="preserve">
    <value>Order Subtotal Before Discount &gt;=</value>
  </data>
  <data name="WhenProductCategoryIs.Text" xml:space="preserve">
    <value>Product Category Is...</value>
  </data>
  <data name="WhenVendorManufacturerIs.Text" xml:space="preserve">
    <value>When Vendor/Manufacturer Is/Is Not…</value>
  </data>
  <data name="WhenProductIs.Text" xml:space="preserve">
    <value>Product Is...</value>
  </data>
  <data name="WhenProductTypeIs.Text" xml:space="preserve">
    <value>When Product Type Is/Is Not...</value>
  </data>
  <data name="WhenUserIs.Text" xml:space="preserve">
    <value>User Is...</value>
  </data>
  <data name="WhenUserIsInRole.Text" xml:space="preserve">
    <value>User Is In Role...</value>
  </data>
  <data name="WhenUserPriceGroupIs.Text" xml:space="preserve">
    <value>User Price Group Is...</value>
  </data>
  <data name="EditPromotion_Affiliate.Text" xml:space="preserve">
    <value>Edit Affiliate Promotion</value>
  </data>
  <data name="EditPromotion_OfferForLineItems.Text" xml:space="preserve">
    <value>Edit Offer For Order Items</value>
  </data>
  <data name="EditPromotion_OfferForOrder.Text" xml:space="preserve">
    <value>Edit Offer For Order Subtotal</value>
  </data>
  <data name="EditPromotion_OfferForShipping.Text" xml:space="preserve">
    <value>Edit Offer For Shipping</value>
  </data>
  <data name="EditPromotion_Sale.Text" xml:space="preserve">
    <value>Edit Sale</value>
  </data>
  <data name="SumOrCountOfProducts.Text" xml:space="preserve">
    <value>When Products within Specified Categories Are...</value>
  </data>
  <data name="ActionHelp.Text" xml:space="preserve">
    <value>This happens.</value>
  </data>
  <data name="QualificationHelp.Text" xml:space="preserve">
    <value>When these are true...</value>
  </data>
  <data name="EditPromotion_OfferForFreeItems.Text" xml:space="preserve">
    <value>Edit Offer For Free Items</value>
  </data>
</root>