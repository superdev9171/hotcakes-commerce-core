<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hotcakes.Web</name>
    </assembly>
    <members>
        <member name="T:Hotcakes.Web.Barcodes.Barcode">
            <summary>
                This class was designed to give developers and easy way to generate a barcode image from a string of data.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.#ctor">
            <summary>
                Default constructor.  Does not populate the raw data.  MUST be done via the RawData property before encoding.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.#ctor(System.String)">
            <summary>
                Constructor. Populates the raw data. No whitespace will be added before or after the barcode.
            </summary>
            <param name="data">String to be encoded.</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.Encode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Int32,System.Int32)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.Encode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="ForeColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.Encode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="ForeColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.Encode(Hotcakes.Web.Barcodes.TYPE,System.String)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.Encode(Hotcakes.Web.Barcodes.TYPE)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.Encode">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.Generate_Image">
            <summary>
                Gets a bitmap representation of the encoded data.
            </summary>
            <returns>Bitmap of encoded value.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.GetImageData(Hotcakes.Web.Barcodes.SaveTypes)">
            <summary>
                Gets the bytes that represent the image.
            </summary>
            <param name="savetype">File type to put the data in before returning the bytes.</param>
            <returns>Bytes representing the encoded image.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.SaveImage(System.String,Hotcakes.Web.Barcodes.SaveTypes)">
            <summary>
                Saves an encoded image to a specified file and type.
            </summary>
            <param name="Filename">Filename to save to.</param>
            <param name="FileType">Format to use.</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.SaveImage(System.IO.Stream,Hotcakes.Web.Barcodes.SaveTypes)">
            <summary>
                Saves an encoded image to a specified stream.
            </summary>
            <param name="stream">Stream to write image to.</param>
            <param name="FileType">Format to use.</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.DoEncode(Hotcakes.Web.Barcodes.TYPE,System.String)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.DoEncode(Hotcakes.Web.Barcodes.TYPE,System.String,System.String@)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="XML">XML representation of the data and the image of the barcode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.DoEncode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Boolean)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.DoEncode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.DoEncode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.DoEncode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Barcode.DoEncode(Hotcakes.Web.Barcodes.TYPE,System.String,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.String@)">
            <summary>
                Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <param name="XML">XML representation of the data and the image of the barcode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.FormattedData">
            <summary>
                Gets the formatted data.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.RawData">
            <summary>
                Gets or sets the raw data to encode.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.EncodedValue">
            <summary>
                Gets the encoded value.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.Country_Assigning_Manufacturer_Code">
            <summary>
                Gets the Country that assigned the Manufacturer Code.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.EncodedType">
            <summary>
                Gets or sets the Encoded Type (ex. UPC-A, EAN-13 ... etc)
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.EncodedImage">
            <summary>
                Gets the Image of the generated barcode.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.ForeColor">
            <summary>
                Gets or sets the color of the bars. (Default is black)
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.BackColor">
            <summary>
                Gets or sets the background color. (Default is white)
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.Width">
            <summary>
                Gets or sets the width of the image to be drawn. (Default is 300 pixels)
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.Height">
            <summary>
                Gets or sets the height of the image to be drawn. (Default is 150 pixels)
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.IncludeLabel">
            <summary>
                Gets or sets whether a label should be drawn below the image.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.EncodingTime">
            <summary>
                Gets or sets the amount of time in milliseconds that it took to encode and draw the barcode.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.XML">
            <summary>
                Gets the XML representation of the Barcode data and image.
            </summary>
        </member>
        <member name="P:Hotcakes.Web.Barcodes.Barcode.ImageFormat">
            <summary>
                Gets or sets the image format to use when encoding and returning images. (Jpeg is default)
            </summary>
        </member>
        <member name="T:Hotcakes.Web.Barcodes.BarcodeXML">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Hotcakes.Web.Barcodes.BarcodeXML.BarcodeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Hotcakes.Web.Barcodes.BarcodeXML.BarcodeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Hotcakes.Web.Barcodes.BarcodeXML.BarcodeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML.BarcodeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML.BarcodeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML.BarcodeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Codabar.Encode_Codabar">
            <summary>
                Encode the raw data using the Codabar algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code11.Encode_Code11">
            <summary>
                Encode the raw data using the Code 11 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code128.#ctor(System.String)">
            <summary>
                Encodes data in Code128 format.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code128.#ctor(System.String,Hotcakes.Web.Barcodes.Code128.TYPES)">
            <summary>
                Encodes data in Code128 format.
            </summary>
            <param name="input">Data to encode.</param>
            <param name="type">Type of encoding to lock to. (Code 128A, Code 128B, Code 128C)</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code39.#ctor(System.String)">
            <summary>
                Encodes with Code39.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code39.#ctor(System.String,System.Boolean)">
            <summary>
                Encodes with Code39.
            </summary>
            <param name="input">Data to encode.</param>
            <param name="AllowExtended">Allow Extended Code 39 (Full Ascii mode).</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code39.Encode_Code39">
            <summary>
                Encode the raw data using the Code 39 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code93.#ctor(System.String)">
            <summary>
                Encodes with Code93.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Code93.Encode_Code93">
            <summary>
                Encode the raw data using the Code 93 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.EAN13.Encode_EAN13">
            <summary>
                Encode the raw data using the EAN-13 algorithm. (Can include the checksum already.  If it doesnt exist in the data
                then it will calculate it for you.  Accepted data lengths are 12 + 1 checksum or just the 12 data digits)
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.EAN8.Encode_EAN8">
            <summary>
                Encode the raw data using the EAN-8 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Interleaved2of5.Encode_Interleaved2of5">
            <summary>
                Encode the raw data using the Interleaved 2 of 5 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.ISBN.Encode_ISBN_Bookland">
            <summary>
                Encode the raw data using the Bookland/ISBN algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.ITF14.Encode_ITF14">
            <summary>
                Encode the raw data using the ITF-14 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.JAN13.Encode_JAN13">
            <summary>
                Encode the raw data using the JAN-13 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.MSI.Encode_MSI">
            <summary>
                Encode the raw data using the MSI algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Postnet.Encode_Postnet">
            <summary>
                Encode the raw data using the PostNet algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.Standard2of5.Encode_Standard2of5">
            <summary>
                Encode the raw data using the Standard 2 of 5 algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.UPCA.Encode_UPCA">
            <summary>
                Encode the raw data using the UPC-A algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.UPCE.Encode_UPCE">
            <summary>
                Encode the raw data using the UPC-E algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.UPCSupplement2.Encode_UPCSupplemental_2">
            <summary>
                Encode the raw data using the UPC Supplemental 2-digit algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Barcodes.UPCSupplement5.Encode_UPCSupplemental_5">
            <summary>
                Encode the raw data using the UPC Supplemental 5-digit algorithm.
            </summary>
        </member>
        <member name="M:Hotcakes.Web.Conversions.InchesToCentimeters(System.Decimal)">
            <summary>
                Converts inches to centimeters
            </summary>
            <param name="inches">Inches to convert</param>
            <returns>Inches converted to centimeters</returns>
        </member>
        <member name="M:Hotcakes.Web.Conversions.CentimetersToInches(System.Decimal)">
            <summary>
                Converts centimeters to inches
            </summary>
            <param name="centimeters">Centimeters to convert</param>
            <returns>Centimeters converted to inches</returns>
        </member>
        <member name="M:Hotcakes.Web.Conversions.PoundsToKilograms(System.Decimal)">
            <summary>
                Converts pounds to kilograms
            </summary>
            <param name="pounds">Pound amount to convert</param>
            <returns>Pounds converted to Kilograms</returns>
        </member>
        <member name="M:Hotcakes.Web.Conversions.KilogramsToPounds(System.Decimal)">
            <summary>
                Converts Kilograms to Pounds
            </summary>
            <param name="kilograms">Kilogram amount to convert</param>
            <returns>Kilograms converted to pounds</returns>
        </member>
        <member name="M:Hotcakes.Web.Conversions.DecimalPoundsToOunces(System.Decimal)">
            <summary>
                Converts the non-whole pounds portion of a decial number to ounces
            </summary>
            <param name="pounds">The decimal representation of pounds to be converted</param>
            <returns>Only the non-whole pound portion of the pounds converted to ounces</returns>
        </member>
        <member name="T:Hotcakes.Web.Search.PorterStemmer">
             Stemmer, implementing the Porter Stemming Algorithm
            
             The Stemmer class transforms a word into its root form.  The input
             word can be provided a character at time (by calling add()), or at once
             by calling one of the various stem(something) methods.
        </member>
        <member name="M:Hotcakes.Web.Search.PorterStemmer.add(System.Char)">
            Add a character to the word being stemmed.  When you are finished
            adding characters, you can call stem(void) to stem the word.
        </member>
        <member name="M:Hotcakes.Web.Search.PorterStemmer.add(System.Char[],System.Int32)">
            Adds wLen characters to the word being stemmed contained in a portion
            of a char[] array. This is like repeated calls of add(char ch), but
            faster.
        </member>
        <member name="M:Hotcakes.Web.Search.PorterStemmer.ToString">
            After a word has been stemmed, it can be retrieved by toString(),
            or a reference to the internal buffer can be retrieved by getResultBuffer
            and getResultLength (which is generally more efficient.)
        </member>
        <member name="M:Hotcakes.Web.Search.PorterStemmer.getResultLength">
            Returns the length of the word resulting from the stemming process.
        </member>
        <member name="M:Hotcakes.Web.Search.PorterStemmer.getResultBuffer">
            Returns a reference to a character buffer containing the results of
            the stemming process.  You also need to consult getResultLength()
            to determine the length of the result.
        </member>
        <member name="M:Hotcakes.Web.Search.PorterStemmer.stem">
            Stem the word placed into the Stemmer buffer through calls to add().
            Returns true if the stemming process resulted in a word different
            from the input.  You can retrieve the result with
            getResultLength()/getResultBuffer() or toString().
        </member>
        <member name="M:Hotcakes.Web.Text.PadString(System.String,System.Int32,System.String)">
            <summary>
                Pads a given string to a specific length with a given character
            </summary>
            <param name="sourceString">String to pad</param>
            <param name="maxLength">Maximum length of padded string</param>
            <param name="padCharacter">Character to append to string less than the max length.</param>
            <returns></returns>
        </member>
    </members>
</doc>
