<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hotcakes.Payment</name>
    </assembly>
    <members>
        <member name="T:Hotcakes.Payment.ActionType">
            <summary>
                Various actions that a transaction can be.
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.Unknown">
            <summary>
                Unknown - should not be used.
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CreditCardInfo">
            <summary>
                A transaction that does nothing but store CC information on the server
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CreditCardHold">
            <summary>
                Holds funds as an authorization against future capture
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CreditCardCapture">
            <summary>
                Captured funds previously held/authorized
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CreditCardCharge">
            <summary>
                A hold + capture or charge in a single step
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CreditCardRefund">
            <summary>
                Refunds money to the CC
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CreditCardVoid">
            <summary>
                Voids a previous transaction (usually only works before batch is settled)
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CreditCardIgnored">
            <summary>
            A Transaction that is ignored by Payment gateway even if everything is correct
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CheckReceived">
            <summary>
                Receive Payment as a Check
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CheckReturned">
            <summary>
                Send Payment as a Check
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CashReceived">
            <summary>
                Receive a Payment as Cash
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CashReturned">
            <summary>
                Return Cash
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PurchaseOrderInfo">
            <summary>
                Purchase Order Number Info Stored
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PurchaseOrderAccepted">
            <summary>
                Consider PO as Valid Payment
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CompanyAccountInfo">
            <summary>
                Company Account Number Saved
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.CompanyAccountAccepted">
            <summary>
                Company Account Number accepted as payment
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardInfo">
            <summary>
                Record Gift Card Information
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardHold">
            <summary>
                Hold a Specific Amount on a Gift Card
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardUnHold">
            <summary>
                Release previous hold on gift card amount
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardCapture">
            <summary>
                Capture a Held Amount on a Gift Card
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardDecrease">
            <summary>
                Reduce Value of Gift Card
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardIncrease">
            <summary>
                Increase Value of Gift Card
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardCreateNew">
            <summary>
                Create a new Gift Card with an initial amount
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardActivate">
            <summary>
                Activate a Gift Card Number
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardBalanceInquiry">
            <summary>
                Find the current balance of a gift card
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.GiftCardDeactivate">
            <summary>
                Deactivate a Gift Card Number
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.RewardPointsInfo">
            <summary>
                Record Reward Points Information
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.RewardPointsHold">
            <summary>
                Hold a Specific Amount of Reward Points
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.RewardPointsCapture">
            <summary>
                Capture a Held Amount of Reward Points
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.RewardPointsDecrease">
            <summary>
                Reduce Points Available
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.RewardPointsIncrease">
            <summary>
                Increase Points Available
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.RewardPointsUnHold">
            <summary>
                Un-hold a Specific Amount of Reward Points
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PayPalHold">
            <summary>
                Funds Held at PayPal
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PayPalCapture">
            <summary>
                Capture previously held Funds
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PayPalCharge">
            <summary>
                Charge a PayPal Account
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PayPalRefund">
            <summary>
                Send Money to a PayPal Account
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PayPalVoid">
            <summary>
                Void a Pending Transaction
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.PayPalExpressCheckoutInfo">
            <summary>
                Customer Requests PayPal Express Checkout
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.ThirdPartyPayMethodInfo">
            <summary>
                Customer Requests Checkout using Third Party Pay Method
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.ThirdPartyPayMethodHold">
            <summary>
                Funds Held by Third Party Payment Method
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.ThirdPartyPayMethodCapture">
            <summary>
                Capture previously held Funds
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.ThirdPartyPayMethodCharge">
            <summary>
                Charge via Third Party Pay Method
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.ThirdPartyPayMethodRefund">
            <summary>
                Refund Money via Third Party Pay Method
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.ThirdPartyPayMethodVoid">
            <summary>
                Void a Pending Transaction
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.RecurringSubscriptionInfo">
            <summary>
                Create a Recurring Subscription
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionType.OfflinePaymentRequest">
            <summary>
                Records customer request to pay offline
            </summary>
        </member>
        <member name="M:Hotcakes.Payment.ActionTypeUtils.IsCreditCardTransaction(Hotcakes.Payment.ActionType)">
            <summary>
                Tells you whether the transaction is a credit card transaction or not.
            </summary>
            <param name="action">Transaction type to evaluate.</param>
            <returns>If true, the transaction type (action) is a credit card transaction.</returns>
        </member>
        <member name="M:Hotcakes.Payment.ActionTypeUtils.IsGiftCardTransaction(Hotcakes.Payment.ActionType)">
            <summary>
                Tells you whether the transaction is a gift card transaction or not.
            </summary>
            <param name="action">Transaction type to evaluate.</param>
            <returns>If true, the transaction type (action) is a gift card transaction.</returns>
        </member>
        <member name="M:Hotcakes.Payment.ActionTypeUtils.IsPayPalTransaction(Hotcakes.Payment.ActionType)">
            <summary>
                Tells you whether the transaction is a PayPal transaction or not.
            </summary>
            <param name="action">Transaction type to evaluate.</param>
            <returns>If true, the transaction type (action) is a PayPal transaction.</returns>
        </member>
        <member name="M:Hotcakes.Payment.ActionTypeUtils.IsRewardPointTransaction(Hotcakes.Payment.ActionType)">
            <summary>
                Tells you whether the transaction is a reward point transaction or not.
            </summary>
            <param name="action">Transaction type to evaluate.</param>
            <returns>If true, the transaction type (action) is a reward point transaction.</returns>
        </member>
        <member name="F:Hotcakes.Payment.ActionTypeUtils.BalanceChangingActions">
            <summary>
            The list of actions that influence accounts balance
            </summary>
        </member>
        <member name="F:Hotcakes.Payment.ActionTypeUtils.BalanceChangingActionsForCreditCardReport">
            <summary>
            The list of actions that influence accounts balance
            </summary>
        </member>
        <member name="T:Hotcakes.Payment.CardData">
            <summary>
                This is the primary object that is used to manage credit card data in the main application.
            </summary>
            <remarks>The REST API equivalent is OrderTransactionCardDataDTO.</remarks>
        </member>
        <member name="M:Hotcakes.Payment.CardData.IsCardValid(System.DateTime)">
            <summary>
                Validates and reports the findings of the card number and expiration date validation.
            </summary>
            <param name="localTime">The current date/time stamp of the transaction.</param>
            <returns>Boolean - if true, the card number and date are valid.</returns>
        </member>
        <member name="M:Hotcakes.Payment.CardData.CardHasExpired(System.DateTime)">
            <summary>
                Validates the expiration date of the card.
            </summary>
            <param name="localTime">The current date/time stamp of the transaction.</param>
            <returns>Boolean - if true, the expiration date is still in the future.</returns>
        </member>
        <member name="P:Hotcakes.Payment.CardData.CardNumber">
            <summary>
                The number of the credit card.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.CardHolderName">
            <summary>
                The name of the credit card holder as it appears on the card.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.ExpirationYear">
            <summary>
                The year that the credit card will expire.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.ExpirationMonth">
            <summary>
                The month that the credit card will expire.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.SecurityCode">
            <summary>
                The CVV or code that is unique to identify the card.
            </summary>
            <remarks>
                This value is not saved anywhere in the application per PA-DSS compliance standards.
            </remarks>
        </member>
        <member name="P:Hotcakes.Payment.CardData.ExpirationMonthPadded">
            <summary>
                The correct two-character representation of the expiration month.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.ExpirationYearTwoDigits">
            <summary>
                The correct two-character representation of the expiration year.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.CardNumberLast4Digits">
            <summary>
                Returns the last 4-digits of the credit card number for display in the application.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.CardType">
            <summary>
                Gets the type of card that this is based upon the card number.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.CardData.CardTypeName">
            <summary>
                Returns the human-readable version of the card type, based upon the card number.
            </summary>
        </member>
        <member name="T:Hotcakes.Payment.CardValidator">
            <summary>
                This is the class used to help validate the credit card numbers that are input into the system.
            </summary>
        </member>
        <member name="M:Hotcakes.Payment.CardValidator.GetCardTypeFromNumber(System.String)">
            <summary>
                This method will return the type of the credit card, based upon the credit card number provided.
            </summary>
            <param name="number">A credit card number of at least 6 characters in length.</param>
            <returns>The type of the credit card is returned.</returns>
        </member>
        <member name="M:Hotcakes.Payment.CardValidator.CleanCardNumber(System.String)">
            <summary>
                This method will remove any non-numeric values from the card number passed into it.
            </summary>
            <param name="number">The value to remove unexpected characters from.</param>
            <returns>The original value, with only numeris characters</returns>
        </member>
        <member name="M:Hotcakes.Payment.CardValidator.IsCardNumberValid(System.String)">
            <summary>
                This method will inspect the credit card number, and determine whether it is valid or not.
            </summary>
            <param name="number">The full credit card number</param>
            <returns>
                If the credit card doesn't match the expected format and/or length of the prescribed card number, "false" will
                be returned.
            </returns>
        </member>
        <member name="M:Hotcakes.Payment.CardValidator.IsCardNumberValid(System.String,Hotcakes.Payment.CardType)">
            <summary>
                This method will inspect the credit card number, and determine whether it is valid or not.
            </summary>
            <param name="number">The full credit card number</param>
            <param name="type">The type of credit card the number belongs to</param>
            <returns>
                If the credit card doesn't match the expected format and/or length of the prescribed card number, "false" will
                be returned.
            </returns>
        </member>
        <member name="T:Hotcakes.Payment.RecurringGateways.AuthorizeNet.SilentPostHelper">
            <summary>
            </summary>
        </member>
        <member name="T:Hotcakes.Payment.GiftCardData">
            <summary>
                This is the primary object that is used to manage gift card transactions in the main application.
            </summary>
            <remarks>The REST API equivalent is OrderTransactionGiftCardDataDTO.</remarks>
        </member>
        <member name="P:Hotcakes.Payment.GiftCardData.LineItemId">
            <summary>
                The unique ID of the line item in the order for this gift card.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.GiftCardData.CardNumber">
            <summary>
                The assigned gift card number for this card.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.GiftCardData.SecurityCode">
            <summary>
                A code used to validate the gift card.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.GiftCardData.Amount">
            <summary>
                The amount that the gift card was purchased for.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.GiftCardData.RecipientName">
            <summary>
                The full name of the gift card recipient.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.GiftCardData.RecipientEmail">
            <summary>
                The email address of the gift card recipient.
            </summary>
        </member>
        <member name="P:Hotcakes.Payment.GiftCardData.ExpirationDate">
            <summary>
                The date that the gift card will expire.
            </summary>
        </member>
        <member name="M:Hotcakes.Payment.Gateways.StripeProcessor.CreateCharge(Hotcakes.Payment.Transaction,System.Boolean)">
            <summary>
                Creates the charge.
            </summary>
            <param name="t">The t.</param>
            <param name="capture">
                Whether or not to immediately capture the charge. When false, the charge issues an
                authorization(or pre-authorization), and will need to be captured later
            </param>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.Id">
            <summary>
                The unique identifier of current transaction
            </summary>
            <value>
                The identifier.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.Amount">
            <summary>
                The currency value of this transaction operation.
            </summary>
            <value>
                The amount.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.Action">
            <summary>
                Identifies transaction type that have to be performed.
            </summary>
            <value>
                The action.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.Customer">
            <summary>
                The customer from whose name transaction is initiated.
            </summary>
            <value>
                The customer.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.AdditionalSettings">
            <summary>
                The additional transaction settings.
            </summary>
            <value>
                The additional settings.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.GiftCard">
            <summary>
                The gift card data in case gift card transaction is executed.
            </summary>
            <value>
                The card.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.Card">
            <summary>
                The card data in case payment is done by credit card.
            </summary>
            <value>
                The card.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.CheckNumber">
            <summary>
                The check number when payment by check is selected.
            </summary>
            <value>
                The check number.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.PurchaseOrderNumber">
            <summary>
                The purchase order number that is used when purchse order payment method is used.
            </summary>
            <value>
                The purchase order number.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.CompanyAccountNumber">
            <summary>
                The company account number that can be used when purchse is done on company account.
            </summary>
            <value>
                The company account number.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.Items">
            <summary>
                The line items data related to this transaction.
            </summary>
            <value>
                The items.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.Result">
            <summary>
                Execution result of specified transaction.
            </summary>
            <value>
                The result.
            </value>
        </member>
        <member name="P:Hotcakes.Payment.Transaction.IsRefundTransaction">
            <summary>
                Identifies whether this instance is refund transaction.
            </summary>
            <value>
                <c>true</c> if this transaction refunds money; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
